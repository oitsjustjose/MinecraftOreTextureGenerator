name: Build MOTG Cross-Platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -U pyinstaller
    - name: Build with PyInstaller
      run: |
        pyinstaller -D -F -n generate -c -n MOTD-${{matrix.os}} ./generate.py
    - name: Git Tag Generator
      id: gen_tag
      uses: ChloePlanet/github-tag-action@2.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
    - name: Create Release
      uses: actions/github-script@v2
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          console.log('environment', process.versions)
          const fs = require('fs').promises;
      
          const { repo: { owner, repo }, sha } = context;
          console.log({ owner, repo, sha });

          const release = await github.repos.createRelease({
            owner, repo,
            tag_name: '${{ steps.gen_tag.outputs.new_tag }}',
            prerelease: true,
            target_commitish: sha
          });

          console.log('created release', { release });

          for (let file of await fs.readdir('./dist')) {
            console.log('uploading', `./dist/${file}`);

            await github.repos.uploadReleaseAsset({
              owner, repo,
              release_id: release.data.id,
              name: file,
              data: await fs.readFile(`./dist/${file}`)
            });            
          }
          
